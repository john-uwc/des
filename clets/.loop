#!/usr/bin/env bash

# author: steven, date:2018.3.16
# routine to handle event ship with a pump

# runtime data pool
unset _dw_c && _dw_c=$(map init)
# select op
function _dw_query(){
[ $# -gt 2 ] && return $_err_f_param_
local r=$(map $_dw_c get "$1") && echo ${r:-"$2"}
}
# delete op
function _dw_purge(){
[ $# -ne 1 ] && return $_err_f_param_
_dw_c=$(map $_dw_c del "$1") && _loop "$1"
}
# insert or update op
function _dw_store(){
[ $# -ne 2 ] && return $_err_f_param_
_dw_c=$(map $_dw_c put "$1" "$2") && _loop "$1"
}


# fs event
function _fs_loop(){
local cs=$(_dw_query "vc")
if [ "$cs" != $(vc_cs) ]; then
_invoke_2c unalias "$cs"; cs=$(vc_cs); _invoke_2c alias "$cs=vc $cs"
fi
_dw_store "vc" "$cs"
}

# vc event
function _vc_loop(){
local cs=$(_dw_query "vc");
prompt "st.vc" $(__vc_st_$cs)
}

# ts event
function _ts_loop(){
local envrp=$(_es_env "path")
local tsc=","; local tss=""
local e
for e in $(map $(_dw_query ts) eset); do
tss="$tss:$(pair v $e)"
tsc="$tsc$(pair k $e),"
done
export PATH=$envrp$tss && prompt "a.ts" $tsc
}
